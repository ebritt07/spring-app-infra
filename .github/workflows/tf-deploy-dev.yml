name: tf-deploy-dev
env:
  environment: dev
  terraform_version: 1.6.6
  zip_artifacts: zip_artifacts

permissions:
  id-token: write
  contents: read

on:
  push:
    branches: [main, feature-*, bugfix-*]
  workflow_dispatch:
    inputs:
      use_self_hosted:
        description: "Run on a self-hosted runner"
        required: true
        default: "false"
        type: choice
        options:
          - "true"
          - "false"

jobs:
  calculate-runner:
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.set-runner.outputs.runner }}
    steps:
      - name: Set Runner
        id: set-runner
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "${{ github.event.inputs.use_self_hosted }}" == "true" ]; then
            echo "runner=self-hosted" | tee -a $GITHUB_OUTPUT
          else
            echo "runner=ubuntu-latest" | tee -a $GITHUB_OUTPUT
          fi

  tf-plan:
    needs: calculate-runner
    runs-on: ${{ needs.calculate-runner.outputs.runner }}
    environment: dev
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.2.1
        with:
          role-to-assume: ${{secrets.AWS_ROLE_ARN}}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.terraform_version }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan (Save Output)
        run: terraform plan -var-file="env/${{ env.environment }}/variables.tfvars" -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: Upload Zip Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.zip_artifacts }}
          path: ${{ env.zip_artifacts }}/

  tf-apply:
    needs: [calculate-runner, tf-plan]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ${{ needs.calculate-runner.outputs.runner }}
    environment: dev
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.2.1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: us-east-1

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Download Zip Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{env.zip_artifacts}}
          path: ${{env.zip_artifacts}}/

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.terraform_version }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
